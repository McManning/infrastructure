
# HTTPS redirect everything but Let's Encrypt challenges
server {
    listen 80 default_server;
    listen [::]:80;
    server_name _;

    # Accept a challenge on any domain on this server
    location ~ /.well-known {
        allow all;
        root /usr/local/nginx/html/letsencrypt;
    }

    # The rest routes to https
    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }
}

# Redirect for live.sybolt.com
server {
  listen 80;
  listen [::]:80;
  server_name live.sybolt.com;

  location / {
    rewrite ^ https://sybolt.com/live permanent;
  }
}

# procedural.graphics domain settings
#server {
#    listen 443 ssl http2;
#    listen [::]:443 ssl http2;
#    server_name procedural.graphics;
#
#    ssl_certificate /etc/letsencrypt/live/procedural.graphics/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/procedural.graphics/privkey.pem;
#
#    root /usr/local/nginx/html/sybolt;
#    index index.html;
#}

# sybolt.com domain settings
server {
   listen 443 ssl http2;
   listen [::]:443 ssl http2;
   server_name sybolt.com;

   ssl_certificate /etc/letsencrypt/live/sybolt.com/fullchain.pem;
   ssl_certificate_key /etc/letsencrypt/live/sybolt.com/privkey.pem;

   root /usr/local/nginx/html/sybolt;
   index index.html;

   # Location for full resolution HLS stream
   # e.g. https://sybolt.com/hls/{stream-key}/index.m3u8
   location /hls {
    	types {
            application/vnd.apple.mpegurl m3u8;
        }
        alias /usr/local/nginx/html/hls;
        add_header Cache-Control no-cache;
        add_header Access-Control-Allow-Origin '*';
    }

    # GraphQL API provided by Sybot
    location /graphql {
        resolver 127.0.0.11 valid=30s;
        set $upstream_sybot sybot;
        proxy_pass http://$upstream_sybot:5000/graphql;

	    add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Reverse proxy for transmission management (no ovpn)
    location /transmission {
        resolver 127.0.0.11 valid=30s;
        set $upstream_transmission transmission;
        proxy_pass http://$upstream_transmission:9091;

        proxy_pass_header X-Transmission-Session-Id;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    # Reverse proxy for botamusique
    location /markbot {
        resolver 127.0.0.11 valid=30s;
        set $upstream_markbot markbot;
        proxy_pass http://$upstream_markbot:8181;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Script-Name /markbot;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
        port_in_redirect off;
    }

    location / {
        try_files $uri /index.html;
    }
}
